name : Build and deploy code
on: [push]
jobs:
  job1:
    environment: 
      name: testing 
    env:
      DATABASE_HOSTNAME : ${{secrets.DATABASE_HOSTNAME}} 
      DATABASE_PORT : ${{secrets.DATABASE_PORT}}
      DATABASE_USERNAME : ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD : ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME : ${{secrets.DATABASE_NAME}}_test
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM : ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES : ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
       postgres:
         image: postgres
         env:
           POSTGRES_PASSWORD : ${{secrets.DATABASE_PASSWORD}}
           POSTGRES_DB :   ${{secrets.DATABASE_NAME}}_test
         ports: 
          - 5432:5432
         options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries  5

    runs-on: ubuntu-latest
    steps:
        - name : pulling git repo
          uses : actions/checkout@v2
        - name : install python
          uses  : actions/setup-python@v2
          with:
            python-version : "3.10"
        - name : update pip
          run : python -m pip install --upgrade pip
        - name : install dependencies
          run : pip install -r requirements.txt
        - name : run tests
          run : |
            pip install pytest
            pytest
        - name : login to docker
          uses : docker/login-action@v3
          with :
            username : ${{secrets.DOCKER_HUB_USERNAME}}
            password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Build and test
          uses: docker/build-push-action@v6
          with:
            target: test
            load: true
        - name : Build and push
          uses : docker/build-push-action@v6
          with:
            platforms: linux/amd64,linux/arm64
            push: true
            target: prod
            tags: ${{secrets.DOCKER_USERNAME}}/infinity:latest

          
        
              
